{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to quiz_game.js Library visit GitHub to view detailed code. quiz_game.js A simple quiz game library allows developers to make quiz-type functionalities for any learning related website. intuitive game mode Start the quiz game Restart the quiz game Timmer implementation One way quiz game mode Right and wrong answer displayment Final grades and result displayment Random shuffled question order to enhance learning Supply Q & A easily by developer Able to change button format Change Timmer length Easily add questions and change answers Users Manual Try it out in Demo Example Click \"Start\" to start the quiz game After \"Start\", timmer will countdown, defult setting is 10s, developers are able to change the countdown timmer. When times up, quiz game will end nomatter if user finish the game_quiz or not After select answer button, the correct answer will display in green, wrong answer will display in red. Next Button will show after select answer. When times up or user finish answer all the questions develper provided it shows the result and user are able to resrart the quiz game. Developers Manual See details in Getting Started","title":"Home"},{"location":"#welcome-to-quiz_gamejs-library","text":"visit GitHub to view detailed code.","title":"Welcome to quiz_game.js Library"},{"location":"#quiz_gamejs","text":"A simple quiz game library allows developers to make quiz-type functionalities for any learning related website.","title":"quiz_game.js"},{"location":"#intuitive-game-mode","text":"Start the quiz game Restart the quiz game Timmer implementation One way quiz game mode Right and wrong answer displayment Final grades and result displayment Random shuffled question order to enhance learning","title":"intuitive game mode"},{"location":"#supply-q-a-easily-by-developer","text":"Able to change button format Change Timmer length Easily add questions and change answers","title":"Supply Q &amp; A easily by developer"},{"location":"#users-manual","text":"Try it out in Demo Example Click \"Start\" to start the quiz game After \"Start\", timmer will countdown, defult setting is 10s, developers are able to change the countdown timmer. When times up, quiz game will end nomatter if user finish the game_quiz or not After select answer button, the correct answer will display in green, wrong answer will display in red. Next Button will show after select answer. When times up or user finish answer all the questions develper provided it shows the result and user are able to resrart the quiz game.","title":"Users Manual"},{"location":"#developers-manual","text":"See details in Getting Started","title":"Developers Manual"},{"location":"api/","text":"Quiz Game Library API Initialize a quiz object Property Type Description question String the question set by developer answer Array the array of answers including text of question and the correction text Sting text of the answer correct Boolean set the answer to be correct or not item Array of Arrays you can set each item with question and answer You can set item in the fomat of below item: { question: \"What is 1+1 ?\", answers: [ { text: '1', correct: false },{ text: '2', correct: true },...] } You can initialize quiz game object in the fomat below { { question: \"...\", answers: [{ text: '...', correct: false },{ text: '...', correct: true },...] }, { question: \"...\", answers: [{ text: '...', correct: true },...] }, ... } Events When user click on the \"Start\" , \"Next\",and \"Restart Quiz\" it reset the status of the quiz object by resetStatus() to hide the \"Next\". Only after click on \"Answers\", \"Next\" will appear Event Discription startButton.addEventListener('click', startQuiz) add event listener if the startbutton is clicked, run the function startQuiz() nextButton.addEventListener('click',()=>{goToNextQuestion()}) if the next button is clicked display the next question button.addEventListener('click', selectAnswer) add event listener is the answer button is clicked run the seleceAnswer() function to count the score from selectAnswer selectAnswer(event) take in a event as a parameter, get the button answer that user selected and records the correct and wrong answer, set correct answer to button dataset Methods Name Params Discription startQuiz() N/A start the quiz start the timmer inside randomOrder(questions) questions Object with Array of Arrays inside shuffuled through the questions to generate random order of the questions everytime when start the quiz goToNextQuestion() N/A Move to next question and display displayQuestion(question) question populating different answers in the question startSetTime() N/A Set timmer for quiz modify let timmer = 10; and (timmer > -1) {startSetTimeDate = setTimeout(() => {fun();}, 1000); to change the timmer period resetState() N/A clear out old answer for the previous question when move to next function createAnswerButton(question) question create the answear button pass in the answear set in question checkIfhaveNext(mark) mark check if the question have next question behind, if not, the next button will not display setStatus(element, correct) element, correct clear the status of correct and wrong after finish answer each question so that the correct and wrong answers can be updated in next question clearStatus(element) element clear correct and wrong status for answer button getResult(length) length get the result for the quiz when finish all question and didn't restart the quiz Callbacks Property Type Description forEach function Iterarate through the answer button to set the status of answer button","title":"API"},{"location":"api/#quiz-game-library-api","text":"","title":"Quiz Game Library API"},{"location":"api/#initialize-a-quiz-object","text":"Property Type Description question String the question set by developer answer Array the array of answers including text of question and the correction text Sting text of the answer correct Boolean set the answer to be correct or not item Array of Arrays you can set each item with question and answer You can set item in the fomat of below item: { question: \"What is 1+1 ?\", answers: [ { text: '1', correct: false },{ text: '2', correct: true },...] } You can initialize quiz game object in the fomat below { { question: \"...\", answers: [{ text: '...', correct: false },{ text: '...', correct: true },...] }, { question: \"...\", answers: [{ text: '...', correct: true },...] }, ... }","title":"Initialize a quiz object"},{"location":"api/#events","text":"When user click on the \"Start\" , \"Next\",and \"Restart Quiz\" it reset the status of the quiz object by resetStatus() to hide the \"Next\". Only after click on \"Answers\", \"Next\" will appear Event Discription startButton.addEventListener('click', startQuiz) add event listener if the startbutton is clicked, run the function startQuiz() nextButton.addEventListener('click',()=>{goToNextQuestion()}) if the next button is clicked display the next question button.addEventListener('click', selectAnswer) add event listener is the answer button is clicked run the seleceAnswer() function to count the score from selectAnswer selectAnswer(event) take in a event as a parameter, get the button answer that user selected and records the correct and wrong answer, set correct answer to button dataset","title":"Events"},{"location":"api/#methods","text":"Name Params Discription startQuiz() N/A start the quiz start the timmer inside randomOrder(questions) questions Object with Array of Arrays inside shuffuled through the questions to generate random order of the questions everytime when start the quiz goToNextQuestion() N/A Move to next question and display displayQuestion(question) question populating different answers in the question startSetTime() N/A Set timmer for quiz modify let timmer = 10; and (timmer > -1) {startSetTimeDate = setTimeout(() => {fun();}, 1000); to change the timmer period resetState() N/A clear out old answer for the previous question when move to next function createAnswerButton(question) question create the answear button pass in the answear set in question checkIfhaveNext(mark) mark check if the question have next question behind, if not, the next button will not display setStatus(element, correct) element, correct clear the status of correct and wrong after finish answer each question so that the correct and wrong answers can be updated in next question clearStatus(element) element clear correct and wrong status for answer button getResult(length) length get the result for the quiz when finish all question and didn't restart the quiz","title":"Methods"},{"location":"api/#callbacks","text":"Property Type Description forEach function Iterarate through the answer button to set the status of answer button","title":"Callbacks"},{"location":"getStarted/","text":"Installation Download quiz_game.js through GitHub Repo . Include quiz_game.js Include quiz_game.js in the html where you want to implement quiz game <script defer type =\"text/javascript\" src='js/quiz_game.js'></script> Include quiz_game.css (Optional) You could include the default quiz_game.css and modify the featues and format. Or you could re-implement the style. <link rel=\"stylesheet\" type=\"text/css\" href=\"styles/quiz_game.css\" media=\"screen\"> Example Easily modify question and answers game_quiz.js Add questions and answers with correct indication in following pattern var questions = { question0: { question: \"What is 1+1 ?\", answers: [ { text: '1', correct: false }, { text: '2', correct: true } ] }, question1: { question: \"What is the course number for Programming on Web ?\", answers: [ { text: 'csc111', correct: false }, { text: 'csc333', correct: false }, { text: 'csc309', correct: true }, { text: 'csc888', correct: false } ] }, question3: { question: \"What is 2*2 ?\", answers: [ { text: '1', correct: false }, { text: '2', correct: false }, { text: '3', correct: false }, { text: '4', correct: true } ] }, question4: { question: \"What is 6*6 ?\", answers: [ { text: '36', correct: true }, { text: '2', correct: false }, { text: '3', correct: false }, { text: '25', correct: false } ] } } Include quiz_game.js and quiz_game.css in the header <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Quiz Game Demo</title> <!----load JS script--> <script defer type =\"text/javascript\" src='js/quiz_game.js'></script> <link rel=\"stylesheet\" type=\"text/css\" href=\"styles/quiz_game.css\" media=\"screen\"> </head> </html> Answers button Example Answer a Example Answer b Example Answer c Example Answer d in html file <div id=\"answer-buttons\" class=\"btn-grid\"> <button class=\"btn\">Example Answer a</button> <button class=\"btn\">Example Answer b</button> <button class=\"btn\">Example Answer c</button> <button class=\"btn\">Example Answer d</button> </div> in quiz_game.css modify .btn-grid { display: grid; grid-template-columns: repeat(1, auto); //modify button layout here //grid-template-columns: repeat(2, auto); gap: 10px; margin: 20px 0; } Control button \"Start\" and \"Next\" in html file Start Next <div class=\"controls\"> <button id=\"start-btn\" class=\"start-btn btn\">Start</button> <button id=\"next-btn\" class=\"next-btn btn hide\">Next</button> </div> Display timmer in html <span id=\"times\"></span> Display Result in html file <div class=\"result\" id=\"result\"></div> Change correct and wrong answer color in quiz_game.css in style folder /*Default*/ :root { --hue-neutral: 400; --hue-wrong: 0; --hue-correct: 145; } /*Modified*/ :root { --hue-neutral: 200; --hue-wrong: 400; --hue-correct: 100; }","title":"Getting Started"},{"location":"getStarted/#installation","text":"Download quiz_game.js through GitHub Repo . Include quiz_game.js Include quiz_game.js in the html where you want to implement quiz game <script defer type =\"text/javascript\" src='js/quiz_game.js'></script> Include quiz_game.css (Optional) You could include the default quiz_game.css and modify the featues and format. Or you could re-implement the style. <link rel=\"stylesheet\" type=\"text/css\" href=\"styles/quiz_game.css\" media=\"screen\">","title":"Installation"},{"location":"getStarted/#example","text":"Easily modify question and answers game_quiz.js Add questions and answers with correct indication in following pattern var questions = { question0: { question: \"What is 1+1 ?\", answers: [ { text: '1', correct: false }, { text: '2', correct: true } ] }, question1: { question: \"What is the course number for Programming on Web ?\", answers: [ { text: 'csc111', correct: false }, { text: 'csc333', correct: false }, { text: 'csc309', correct: true }, { text: 'csc888', correct: false } ] }, question3: { question: \"What is 2*2 ?\", answers: [ { text: '1', correct: false }, { text: '2', correct: false }, { text: '3', correct: false }, { text: '4', correct: true } ] }, question4: { question: \"What is 6*6 ?\", answers: [ { text: '36', correct: true }, { text: '2', correct: false }, { text: '3', correct: false }, { text: '25', correct: false } ] } } Include quiz_game.js and quiz_game.css in the header <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Quiz Game Demo</title> <!----load JS script--> <script defer type =\"text/javascript\" src='js/quiz_game.js'></script> <link rel=\"stylesheet\" type=\"text/css\" href=\"styles/quiz_game.css\" media=\"screen\"> </head> </html> Answers button Example Answer a Example Answer b Example Answer c Example Answer d in html file <div id=\"answer-buttons\" class=\"btn-grid\"> <button class=\"btn\">Example Answer a</button> <button class=\"btn\">Example Answer b</button> <button class=\"btn\">Example Answer c</button> <button class=\"btn\">Example Answer d</button> </div> in quiz_game.css modify .btn-grid { display: grid; grid-template-columns: repeat(1, auto); //modify button layout here //grid-template-columns: repeat(2, auto); gap: 10px; margin: 20px 0; } Control button \"Start\" and \"Next\" in html file Start Next <div class=\"controls\"> <button id=\"start-btn\" class=\"start-btn btn\">Start</button> <button id=\"next-btn\" class=\"next-btn btn hide\">Next</button> </div> Display timmer in html <span id=\"times\"></span> Display Result in html file <div class=\"result\" id=\"result\"></div> Change correct and wrong answer color in quiz_game.css in style folder /*Default*/ :root { --hue-neutral: 400; --hue-wrong: 0; --hue-correct: 145; } /*Modified*/ :root { --hue-neutral: 200; --hue-wrong: 400; --hue-correct: 100; }","title":"Example"}]}